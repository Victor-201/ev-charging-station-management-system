import React from 'react';
import { useNavigate } from 'react-router-dom';
import Card from '../../components/Card.jsx';
import './dashboard.scss';

export default function Dashboard() {
  const navigate = useNavigate();

  const quickCards = [
    { key: 'payments', title: 'Payments', subtitle: 'X·ª≠ l√Ω & ghi nh·∫≠n', icon: 'üí≥', route: '/payments' },
    { key: 'stations', title: 'Stations', subtitle: 'Qu·∫£n l√Ω tr·∫°m s·∫°c', icon: '‚ö°', route: '/stations' },
    { key: 'sessions', title: 'Sessions', subtitle: 'Phi√™n ƒëang ch·∫°y', icon: 'üîã', route: '/sessions' },
    { key: 'profile', title: 'Profile', subtitle: 'Ng∆∞·ªùi d√πng & c·∫•u h√¨nh', icon: 'üë§', route: '/profile' },
  ];

  // Y√™u c·∫ßu quy·ªÅn camera ngay khi b·∫•m v√†o √¥, sau ƒë√≥ ƒëi·ªÅu h∆∞·ªõng
  const requestCameraThenNavigate = async (to) => {
    try {
      // request quy·ªÅn camera (s·∫Ω b·∫≠t prompt c·ªßa tr√¨nh duy·ªát)
      const stream = await navigator.mediaDevices.getUserMedia({ video: true });
      // t·∫°m d·ª´ng stream ƒë·ªÉ gi·∫£i ph√≥ng camera (ScanPage s·∫Ω m·ªü l·∫°i b·∫±ng html5-qrcode)
      stream.getTracks().forEach((t) => t.stop());
      navigate(to);
    } catch (err) {
      console.error('Camera permission denied or error:', err);
      alert('Kh√¥ng th·ªÉ truy c·∫≠p camera. Vui l√≤ng cho ph√©p quy·ªÅn camera v√† th·ª≠ l·∫°i.');
    }
  };

  return (
    <div className="page dashboard-page">
      <div className="page-inner">
        <h1 className="page-title">Dashboard</h1>

        {/* √î qu√©t m√£ QR ·ªü gi·ªØa, n·ªïi b·∫≠t */}
        <div
          className="qr-scan-center"
          role="button"
          tabIndex={0}
          onClick={() => requestCameraThenNavigate('/scan')}
          onKeyDown={(e) => { if (e.key === 'Enter' || e.key === ' ') requestCameraThenNavigate('/scan'); }}
          aria-label="Qu√©t m√£ QR ƒë·ªÉ x√°c nh·∫≠n l∆∞·ª£t s·∫°c"
        >
          <div className="qr-graphic">
            {/* b·∫°n c√≥ th·ªÉ thay b·∫±ng svg QR ƒë·∫πp h∆°n */}
            <div className="qr-icon">üì∑</div>
          </div>
          <div className="qr-text">
            <div className="qr-title">Qu√©t m√£ QR</div>
            <div className="qr-sub">Nh·∫•n ƒë·ªÉ m·ªü camera v√† x√°c nh·∫≠n l∆∞·ª£t s·∫°c</div>
          </div>
        </div>

        <div className="actions-grid">
          {quickCards.map((c) => (
            <button
              key={c.key}
              className={`action-card action-${c.key}`}
              onClick={() => navigate(c.route)}
              aria-label={c.title}
            >
              <div className="action-left">
                <div className="action-emoji" aria-hidden>{c.icon}</div>
                <div className="action-info">
                  <div className="action-title">{c.title}</div>
                  <div className="action-sub">{c.subtitle}</div>
                </div>
              </div>
              <div className="action-right">‚Üí</div>
            </button>
          ))}
        </div>

        <div className="latest-sessions" style={{ marginTop: 24 }}>
          <Card title="Latest Sessions">
            <table>
              <thead>
                <tr>
                  <th>Session ID</th>
                  <th>User</th>
                  <th>Station</th>
                  <th>Start</th>
                  <th>Status</th>
                </tr>
              </thead>
              <tbody>
                <tr><td>S-1001</td><td>Nguyen</td><td>Station A</td><td>10:00</td><td>Active</td></tr>
                <tr><td>S-1000</td><td>Le</td><td>Station B</td><td>09:20</td><td>Finished</td></tr>
              </tbody>
            </table>
          </Card>
        </div>
      </div>
    </div>
  );
}
